{"title": "Selective Attention for Context-aware Neural Machine Translation", "abstract": "Despite the progress made in sentence-level NMT, current systems still fall short at achieving fluent, good quality translation for a full document. Recent works in context-aware NMT consider only a few previous sentences as context and may not scale to entire documents. To this end, we propose a novel and scalable top-down approach to hierarchical attention for context-aware NMT which uses sparse attention to selectively focus on relevant sentences in the document context and then attends to key words in those sentences. We also propose single-level attention approaches based on sentence or word-level information in the context. The document-level context representation, produced from these attention modules, is integrated into the encoder or decoder of the Transformer model depending on whether we use monolingual or bilingual context. Our experiments and evaluation on English-German datasets in different document MT settings show that our selective attention approach not only significantly outperforms context-agnostic baselines but also surpasses context-aware baselines in most cases.", "text": [{"id": 0, "string": "Introduction Neural machine translation has grown immensely in the past few years, from the simplistic RNNbased encoder-decoder models (Sutskever et al., 2014; Bahdanau et al., 2015) to the state-of-the-art Transformer architecture (Vaswani et al., 2017) ."}, {"id": 1, "string": "Most of these models rely on the attention mechanism as a major component, which involves focusing on different parts of a sequence to compute new representations, and has proven to be quite effective in improving the translation quality (Vaswani et al., 2017) ."}, {"id": 2, "string": "However, all of these models share the same inherent problem: the translation is still performed on a sentence-by-sentence * * Work initiated during an internship at Unbabel."}, {"id": 3, "string": "basis, thus ignoring the long-range dependencies which may be useful when it comes to translating discourse phenomena."}, {"id": 4, "string": "More recently, context-aware NMT has been gaining significant traction from the MT community with majority of works coming out in the past two years."}, {"id": 5, "string": "Most of these focus on using a few previous sentences as context (Jean et al., 2017; Wang et al., 2017; Tu et al., 2018; Miculicich et al., 2018) and neglect the rest of the document."}, {"id": 6, "string": "Only one existing work has endeavoured to consider the full document context , thus proposing a more generalised approach to document-level NMT."}, {"id": 7, "string": "However, the model is restrictive as the document-level attention computed is sentence-based and static (computed only once for the sentence being translated)."}, {"id": 8, "string": "A more recent work (Miculicich et al., 2018) proposes to use a hierarchical attention network (HAN) (Yang et al., 2016) to model the contextual information in a structured manner using word-level and sentencelevel abstractions; yet, it uses a limited number of past source and target sentences as context and is not scalable to entire document."}, {"id": 9, "string": "In this work, we propose a selective attention approach to first selectively focus on relevant sentences in the global document-context and then attend to key words in those sentences, while ignoring the rest."}, {"id": 10, "string": "1 Towards this goal, we use sparse attention, enabling an efficient and scalable use of the context."}, {"id": 11, "string": "The intuition behind this is the way humans translate a sentence containing ambiguous words."}, {"id": 12, "string": "They may look for sentences in the whole document which contain similar words and just focus on those for the translation."}, {"id": 13, "string": "This attention, which we call Hierarchical Attention, is computed dynamically for each query word."}, {"id": 14, "string": "Furthermore, we propose a Flat Attention approach which is based on either sentence or word-level information in the context."}, {"id": 15, "string": "We integrate the document-level context representation, produced from these attention modules, into the encoder or decoder of the Transformer model depending on whether we consider monolingual (source-side) or bilingual (both source and target-side) context."}, {"id": 16, "string": "Our contributions are as follows: (i) we propose a novel and efficient top-down approach to hierarchical attention for context-aware NMT, (ii) we compare variants of selective attention with both context-agnostic and context-aware baselines, and (iii) we run experiments in both online (only past context) and offline (both past and future context) settings on three English-German datasets."}, {"id": 17, "string": "Experiments show that our approach improves upon the Transformer by an overall +1.34, +2.06 and +1.18 BLEU for TED Talks, News-Commentary and Europarl, respectively."}, {"id": 18, "string": "It also outperforms two recent context-aware baselines Miculicich et al., 2018) in majority of the cases."}, {"id": 19, "string": "Background Neural Machine Translation Generic NMT models are based on an encoderdecoder architecture (Bahdanau et al., 2015; Vaswani et al., 2017) ."}, {"id": 20, "string": "The encoder reads the source sentence denoted by x = (x 1 , x 2 , ..., x M ) and maps it to a continuous representation z = (z 1 , z 2 , ..., z M )."}, {"id": 21, "string": "Given z, an attentional decoder generates the target translation y = (y 1 , y 2 , ..., y N ) one word at a time in a left-to-right fashion."}, {"id": 22, "string": "The popular Transformer architecture (Vaswani et al., 2017) follows the same structure by using stacked self-attention and point-wise, fully connected layers for both the encoder and decoder."}, {"id": 23, "string": "Encoder The encoder stack is composed of L identical layers, each containing two sub-layers."}, {"id": 24, "string": "The first, a multi-head self-attention sub-layer, allows each position in the encoder to attend to all positions in the previous layer of the encoder, while the second, a feed-forward network, uses two linear transformations with a ReLU activation."}, {"id": 25, "string": "Decoder The decoder stack is also composed of L identical layers."}, {"id": 26, "string": "In addition to the two sublayers, the decoder inserts a third sub-layer, which performs multi-head attention over the output of the encoder stack."}, {"id": 27, "string": "Masking is used in the selfattention sub-layer to prevent positions from attending to subsequent positions thus avoiding leftward flow of information."}, {"id": 28, "string": "Document-level Machine Translation In general, the probability of a document translation Y given the source document X is given by: P \u03b8 (Y |X) = J j=1 P \u03b8 (y j |x j , D \u2212j ) (1) where y j and x j denote the j th target and source sentence, respectively, and D \u2212j = {X \u2212j , Y \u2212j } is the collection of all other sentences in the source and target document."}, {"id": 29, "string": "Since generic NMT models translate one word at a time, Eq."}, {"id": 30, "string": "1 becomes: P \u03b8 (Y |X) = J j=1 N n=1 P \u03b8 (y j n |y j <n , x j , D \u2212j ) (2) where y j n is the n th word of the j th target sentence and y j <n are the previously generated words."}, {"id": 31, "string": "Training The document-conditioned NMT model P \u03b8 (y j |x j , D \u2212j ) is realised using a neural architecture and usually trained via a two-step procedure Miculicich et al., 2018) ."}, {"id": 32, "string": "The first step involves pre-training a standard sentence-level NMT model, and the second step involves optimising the parameters of the whole model, i.e., both the document-level and the sentence-level parameters."}, {"id": 33, "string": "Decoding To generate the best translation for a full document according to the document MT model, the problem of maximizing Eq."}, {"id": 34, "string": "1 is solved using a two-pass Iterative Decoding strategy : first, the translation of each sentence is initialised using the sentence-based NMT model; then, each translation is updated using the context-aware NMT model fixing the other sentences' translations."}, {"id": 35, "string": "Proposed Approach The main goal of this paper is to have a documentlevel NMT model which is memory-efficient, scalable, and capable of listening to the entire document."}, {"id": 36, "string": "To achieve this, we augment a sentencelevel NMT model (the Transformer (Vaswani et al., 2017) ) with an efficient hierarchical attention mechanism which has the ability to identify the key sentences in the document context and then attend to the key words within those sentences."}, {"id": 37, "string": "As mentioned previously, we want to maximise P \u03b8 (y j |x j , D \u2212j ), where we take D \u2212j to be either the monolingual source or bilingual source and target-side context in two settings: offlinethe context comes from both past and future, and online-the context comes from only the past."}, {"id": 38, "string": "In this section, we show how to represent the document-level context using our Context Layer, how to regulate the information at the sentence and document-level using context gating and finally we present our integrated model."}, {"id": 39, "string": "Document-level Context Layer The context D \u2212j is modeled via a single Document-level Context Layer comprising of two sub-layers: (i) a Multi-Head Context Attention sub-layer, and (ii) a Feed-Forward sub-layer, where the former consists of either a top-down Hierarchical Attention module or a Flat Attention module (explained shortly), and the latter is similar to the Feed-Forward network in the original Transformer architecture."}, {"id": 40, "string": "Each sub-layer is followed by a layer normalisation."}, {"id": 41, "string": "2 Let us now describe the attention modules which independently form the Multi-Head Context Attention sub-layer."}, {"id": 42, "string": "Hierarchical Attention Our hierachical attention module H-Attention(Q s , Q w , K s , K w , V w ) ( Figure 1 ) is a reformulation of the Scaled Dot-Product Attention of Vaswani et al."}, {"id": 43, "string": "(2017) ."}, {"id": 44, "string": "Here, we have five inputs consisting of two types of keys and queries, one each for the sentences and the words, while the values are based only on words in the context."}, {"id": 45, "string": "The Hierarchical Attention module has four operations: 1."}, {"id": 46, "string": "Sentence-level Key Matching: This is performed on a set of queries simultaneously, packed together into a matrix Q s ."}, {"id": 47, "string": "The sentencelevel keys are also packed into a matrix K s ."}, {"id": 48, "string": "We will describe in \u00a73.3 how Q s and K s are computed."}, {"id": 49, "string": "The attention weights are computed as: where d k is the dimension of the keys, and \u03b1 s has dimensions equal to the total number of sentences in the document."}, {"id": 50, "string": "We propose to use sparsemax (Martins and Astudillo, 2016), instead of softmax, as this gives us the intended selective attention behavior, that is identifying the key sentences that may potentially be relevant to the current sentence, hence making the model more efficient in compressing its memory."}, {"id": 51, "string": "A softmax attention, on the other hand, can still assign low probability to sentences, forming a long-tail and absorbing significant probability mass, and it cannot fully ignore those sentences."}, {"id": 52, "string": "An additive mask is used (before the sparsemax operation) based on whether we train for offline or online setting by masking out only the current sentence or current and future sentences, respectively."}, {"id": 53, "string": "\u03b1 s = sparsemax(Q s K s T / d k ) (3) 2."}, {"id": 54, "string": "Word-level Key Matching: Here the query and key matrices, Q w and K w , are word-level."}, {"id": 55, "string": "We perform a word-level key matching for each sentence j in the document: \u03b1 j w = sparsemax(Q w K j w T / d k ) (4) where \u03b1 j w is the word-level attention vector for j th sentence."}, {"id": 56, "string": "3 We can also use softmax, instead of sparsemax, for a coarser key matching."}, {"id": 57, "string": "We explore the two variants in our experiments."}, {"id": 58, "string": "3."}, {"id": 59, "string": "Re-scaling attention weights: The word-level attention is further re-weighted by the cor-responding sentence-level attention (Nallapati et al., 2016) such that the probability of j th sentence in a document is given by: \u03b1 j hier = \u03b1 s (j)\u03b1 j w (5) where \u03b1 s (j) is the attention weight for the j th sentence obtained via Eq."}, {"id": 60, "string": "3 and \u03b1 j w is as in Eq."}, {"id": 61, "string": "4."}, {"id": 62, "string": "The re-weighting, thus, produces a scaled attention vector \u03b1 hier = Concat(\u03b1 1 hier , ..., \u03b1 J hier ), each entry of which corresponds to the attention weight for a specific word in the document."}, {"id": 63, "string": "Value Reading: The set of word-level values is packed together into a matrix V w and the matrix of outputs is given by \u03b1 hier V w ."}, {"id": 64, "string": "This multiplication, combined with sparsemax attention, allows to prune the hierarchy."}, {"id": 65, "string": "We further extend the MULTIHEAD attention function proposed by Vaswani et al."}, {"id": 66, "string": "(2017) for our Hierarchical Attention module as: H-MULTIHEAD(Q s , K s , Q w , K w , V w ) = Concat(head 1 , ..., head H )W O where head h = H-Attention(Q s W Qs h , Q w W Qw h , K s W Ks h , K w W Kw h , V w W Vw h ) , W 's are parameter matrices and all (five) inputs are transformed using separate linear layers."}, {"id": 67, "string": "Flat Attention Another way to model the context D \u2212j is via single-level attention by re-using the Scaled Dot-Product Attention in Vaswani et al."}, {"id": 68, "string": "(2017) , Attention(Q, K, V ) = softmax(QK T / d k )V (6) The attention 4 here is of two types: (i) sentencelevel if K, V are computed for sentences in the document, or (ii) word-level if K, V are computed for words in the document."}, {"id": 69, "string": "The former module is similar to the Memory Networks architecture of  in that it uses sentencelevel information."}, {"id": 70, "string": "However, there are two key differences: (i) we use MultiHead attention as in the Transformer architecture, and (ii) our context attention is dynamic such that we have a separate attention for each query word."}, {"id": 71, "string": "4 We plan to investigate sparse flat attention in future work."}, {"id": 72, "string": "Context Gating As mentioned previously, the Multi-Head Context Attention sub-layer is part of the Context Layer (Figure 2 ), the output of which is fed into the Transformer architecture through context gating (Tu et al., 2018) ."}, {"id": 73, "string": "For i th word in source or target: \u03b3 i = \u03c3(W r r i + W d d i ) (7) r i = \u03b3 i r i + (1 \u2212 \u03b3 i ) d i (8) where W's are parameter matrices, r i is the output of encoder or decoder stack for i th word, d i is the output from the context layer for i th word andr i is the final hidden representation for the same."}, {"id": 74, "string": "Integrated Model The context can be integrated into the encoder or decoder of the NMT model depending on if it is monolingual or bilingual."}, {"id": 75, "string": "5 Monolingual context integration in Encoder We add the Document-level Context Layer alongside the encoder stack as shown in Figure 2 ."}, {"id": 76, "string": "The Encoder Context Encoding block stores the keys and values produced from the pre-trained sentence-level NMT model."}, {"id": 77, "string": "For word-level attention, the keys K w and values V w are composed of vector representations (from last encoder layer) of source words in the document, while for the sentence-level attention, the keys K s and values V s are composed of vector representations of sentences in the document where the vector representation of each sentence is an average of the word representations in that sentence."}, {"id": 78, "string": "The queries Q w , Q s are linear transformations of the output of the L th encoder layer which are then matched with the corresponding keys and values stored in the Encoder Context Encoding block just described."}, {"id": 79, "string": "Bilingual context integration in Decoder We again add the Document-level Context Layer alongside the decoder stack as in Figure 3 ."}, {"id": 80, "string": "However, instead of choosing the keys and values to be monolingual as in the encoder, we follow Tu et al."}, {"id": 81, "string": "(2018) in choosing the key to match to the sourceside context, while designing the value to match to the target-side context."}, {"id": 82, "string": "Hence, the keys (in the Decoder Context Encoding block) are composed of context vectors from the Source Attention sublayer, while the values are composed of the hidden representations of the target words, both from the last decoder layer."}, {"id": 83, "string": "Again the keys K w and K s are either for individual target words or target sentences, and same goes for V w and V s ."}, {"id": 84, "string": "The queries Q w , Q s for the Context Layer come from the Source Attention sub-layer in the L th layer of the decoder (Figure 3 )."}, {"id": 85, "string": "in genre, style and level of formality: \u2022 TED This corpus is from the IWSLT 2017 MT track (Cettolo et al., 2012) and contains transcripts of TED talks aligned at sentence level."}, {"id": 86, "string": "Each talk is considered to be a document."}, {"id": 87, "string": "We combine tst2016-2017 into the test set and the rest are used for development."}, {"id": 88, "string": "\u2022 News-Commentary We obtain the sentencealigned document-delimited News Commentary v11 corpus for training."}, {"id": 89, "string": "6 The WMT'16 news-test2015 and news-test2016 are used for development and testing, respectively."}, {"id": 90, "string": "\u2022 Europarl This dataset is extracted from Europarl v7 (Koehn, 2005) ."}, {"id": 91, "string": "The source and target sentences are aligned using the links provided by Tiedemann (2012) ."}, {"id": 92, "string": "Following , we use the SPEAKER tag as the document delimiter."}, {"id": 93, "string": "Documents longer than 5 sentences are kept and the resulting corpus is randomly split into training, dev and test sets."}, {"id": 94, "string": "The corpora statistics are provided in Table 1 ."}, {"id": 95, "string": "All datasets are tokenised and truecased using the Moses toolkit (Koehn et al., 2007) , and split into subword units using a joint BPE model with 30K merge operations (Sennrich et al., 2016) ."}, {"id": 96, "string": "Models and Baselines For offline document MT, we have two context-agnostic baselines: (i) a modified version of RNNSearch (Bahdanau et al., 2015) , which incorporates dropout on the output layer and improves the attention model by feeding the previously generated word, and (ii) the stateof-the-art Transformer architecture."}, {"id": 97, "string": "For the online case, we again have the Transformer as a contextagnostic baseline and two context-aware baselines Miculicich et al., 2018) ."}, {"id": 98, "string": "All models are implemented in C++ using DyNet (Neubig et al., 2017) ."}, {"id": 99, "string": "For RNNSearch, we modify the sentence-based NMT implementation in mantis (Cohn et al., 2016) ."}, {"id": 100, "string": "The encoder is a single layer bidirectional GRU (Cho et al., 2014) and   the decoder is a 2-layer GRU with embeddings and hidden dimensions set to 512."}, {"id": 101, "string": "The dropout rate for the output layer is set to 0.2."}, {"id": 102, "string": "For the Transformer, we use Transformer-DyNet 7 implementation and extend it for our context-aware NMT model."}, {"id": 103, "string": "8 The hidden dimensions and feed-forward layer size is set to 512 and 2048 respectively."}, {"id": 104, "string": "We use 4 layers 9 each in the encoder and decoder with 8 attention heads and employ label smoothing with a value of 0.1."}, {"id": 105, "string": "We also employ all four types of dropouts as in the original Transformer with a rate of 0.1 for the sentence-based model and 0.2 for our contextaware model."}, {"id": 106, "string": "For training all models, we use the default Adam optimiser (Kingma and Ba, 2015) with an initial learning rate of 0.0001 and employ early stopping."}, {"id": 107, "string": "For our context-aware NMT model, we use a two-stage training strategy as described in \u00a72.2."}, {"id": 108, "string": "For inference, we use Iterative Decoding only when using the bilingual context."}, {"id": 109, "string": "All experiments are run on a single Nvidia P100 GPU with 16GBs of memory."}, {"id": 110, "string": "10 7 https://github.com/duyvuleo/Transformer-DyNet 8 The code is available at https://github.com/ sameenmaruf/selective-attn 9 We found this configuration to be much more stable than using 6 layers with almost no difference in performance as reported by Xia et al."}, {"id": 111, "string": "(2018) ."}, {"id": 112, "string": "10 The experiments can also be run on GPUs with 10-12GBs of memory by reducing the batch size at the expense Evaluation Metrics For evaluation, we use BLEU (Papineni et al., 2002) and Meteor (Lavie and Agarwal, 2007) scores on tokenised text, and measure statistical significance with respect to the baselines, p < 0.05 (Clark et al., 2011) ."}, {"id": 113, "string": "Main Results We divide our experiments into two parts: offline and online document MT."}, {"id": 114, "string": "Offline Document MT From the scores of the two context-agnostic baselines in Table 2 , we can see that the Transformer beats the RNNSearch model in all cases by atleast +2.5 BLEU and +2.1 Meteor scores showing that our hyperparameter choice for the Transformer is indeed effective."}, {"id": 115, "string": "For the Encoder Context integration, our Hierarchical Attention models perform the (near) best for News and Europarl datasets with +1.98 and +1 BLEU and +1.99 and +0.82 Meteor improvements with respect to the Transformer."}, {"id": 116, "string": "For TED talks, however, we find the Flat Attention based models (sentence and word-level) to be the best with +1.27 BLEU and +1.08 METEOR improvements."}, {"id": 117, "string": "For Decoder Context integration, we find the Hierarchical Attention to be the best in majority of the cases both in terms of BLEU and Meteor."}, {"id": 118, "string": "of increased computational cost."}, {"id": 119, "string": "Table 3 , all our models significantly outperform the contextagnostic baseline and are significantly better than  in majority cases."}, {"id": 120, "string": "For Encoder Context integration, the HAN encoder (Miculicich et al., 2018) is the best for TED and News datasets, however, the results are statistically insignificant with respect to our best model."}, {"id": 121, "string": "For Europarl, our Hierarchical Attention model performs significantly better than Miculicich et al."}, {"id": 122, "string": "(2018) with a gain of +1.15 BLEU and +1.13 Meteor."}, {"id": 123, "string": "For Decoder Context integration, our Hierachical Attention models are the winner in majority cases and our best models beat Miculicich et al."}, {"id": 124, "string": "(2018) for all datasets based upon BLEU and Meteor."}, {"id": 125, "string": "The main conclusion we draw from these results is that efficiently using the context information at hand is crucial when it comes to improving the performance of context-aware NMT."}, {"id": 126, "string": "Furthermore, shorter pieces of text (e.g., the ones in Europarl) benefit more from using global context because their sentences may exhibit higher interdependency than those in a longer piece of text."}, {"id": 127, "string": "Online Document MT From Offline vs. Online Document MT Let us compare the overall results for the offline and online document MT settings."}, {"id": 128, "string": "For all datasets and model variants, we find the best BLEU and Meteor scores in Tables 2 and 3 (highlighted in bold) to be quite close to each other with those for the online setting slightly better."}, {"id": 129, "string": "This is quite self-explanatory, because in essence, all of the datasets comprise of talks, speeches or commentaries, which are in fact produced in an online manner and hence we do not see drastic improvements in terms of BLEU and Meteor when conditioning on the future context."}, {"id": 130, "string": "This, in our opinion, does not mean that we should never look into the future, but just that NMT models in general are highly subjective to data, and whether context-aware models benefit from future context is also dependent on that."}, {"id": 131, "string": "Analysis Evaluation on Contrastive Pronoun Test Set It has been argued that evaluation metrics which quantify the overall translation quality are somewhat ill-equipped to assess how well models translate inter-sentential phenomena such as pronouns."}, {"id": 132, "string": "Hence, we use a test suite of contrastive translations designed to measure accuracy of translating the English pronoun it to its German counterparts es, er and sie (M\u00fcller et al., 2018) ."}, {"id": 133, "string": "We are inter-  ested to see if our global document-context models surpass the local context-aware baselines."}, {"id": 134, "string": "Table 4 shows that not only our global-context models are quite effective but our Hierarchical Attention model is most useful when the antecedent is farther than three previous sentences."}, {"id": 135, "string": "We also conclude that models for offline MT perform better when antecedent distance is greater than two."}, {"id": 136, "string": "Subjective Evaluation We conduct a subjective evaluation to validate the benefit of exploiting document-level context."}, {"id": 137, "string": "Three native German speakers were asked to choose the better (with ties allowed) of two translations for each of 18 documents (randomly sampled from Europarl test set)."}, {"id": 138, "string": "The two translations, one produced by the Transformer and the other by our Hierarchical Attention model, were evaluated in terms of: adequacy (Which translation expresses the meaning of the source text more adequately?)"}, {"id": 139, "string": "and fluency (Which text has better German?)"}, {"id": 140, "string": "(L\u00e4ubli et al., 2018) ."}, {"id": 141, "string": "Let a, b be number of ratings in favour of Transformer or our model, respectively, and t be number of ties, then number of successes x = b + 0.5t and trials n = a + b + t. We test for statistically significant preference of our model over the Transformer by means of two-sided Sign Tests and find that our model is better than the Transformer both in terms of document-level adequacy (x = 39, n = 54, p = 0.0015) and fluency (x = 38, n = 54, p = 0.0038)."}, {"id": 142, "string": "Model Complexity Model complexity is reported in Table 5 ."}, {"id": 143, "string": "Our context-aware models introduce only 8% more parameters to the original  Transformer model."}, {"id": 144, "string": "In comparison to the Transformer, our Hierarchical Attention model is slow in training, dropping the speed by almost 50% 11 , but it is still almost 40% faster than Miculicich et al."}, {"id": 145, "string": "(2018) ."}, {"id": 146, "string": "At decoding time, our Hierarchical Attention model is almost equivalent to Miculicich et al."}, {"id": 147, "string": "(2018) and only 13% slower than ."}, {"id": 148, "string": "Hence, attending to the whole document (instead of few previous sentences) does not add to the time complexity of the model on average."}, {"id": 149, "string": "Qualitative Analysis To analyse the effect of using sparse attention at both the sentence and word-level, we looked at the attention weights computed by sparsemax."}, {"id": 150, "string": "Table 6 shows an example where our model helped generate a correct translation of the noun \"thoughts\" (highlighted in bold)."}, {"id": 151, "string": "The context sentences shown in the bottom box had the highest attention weights as assigned by sparsemax."}, {"id": 152, "string": "It seems that this particular attention head focuses more on phrases like \"words of sympathy\", \"support', \"symbol of hope\" which are related to the query \"thoughts\"."}, {"id": 153, "string": "Another example in Table 7 shows how our model correctly translates the pronoun \"their\"."}, {"id": 154, "string": "Upon looking at the words in the context sentences, it seems that this particular attention head focuses on the words related to the antecedent \"Croatia's Serbian population\" with most of the weight concentrated around neighbouring words in sentence s j\u22121 ."}, {"id": 155, "string": "It is evident from both examples that word-level sparsity is more prevalent in longer sentences in the context."}, {"id": 156, "string": "The same holds for sparsity at sentence-level."}, {"id": 157, "string": "Related Work The body of work in document-level MT can be broadly classified into two categories: conventional MT and neural MT."}, {"id": 158, "string": "Src: my thoughts are also with the victims ."}, {"id": 159, "string": "Ref: meine Gedanken sind auch bei den Opfern ."}, {"id": 160, "string": "Transformer: ich denke auch an die Opfer ."}, {"id": 161, "string": ": ich denke auch an die Opfer ."}, {"id": 162, "string": "Miculicich et al."}, {"id": 163, "string": "(2018) : ich denke auch an die Opfer ."}, {"id": 164, "string": "Our Model: meine Gedanken sind auch bei den Opfern ."}, {"id": 165, "string": "Head 2: Attention to related words sympathy, support, hope s j\u22122 : ( FR ) Madam President , many things have already been said , but I would like to echo all the words of sympathy and support that have already been addressed to the peoples of Tunisia and Egypt ."}, {"id": 166, "string": "s j+4 : it must implement a strong strategy towards these countries ."}, {"id": 167, "string": "s j\u22121 : they are a symbol of hope for all those who defend freedom ."}, {"id": 168, "string": "Head 8: Attention to words related to the antecedent."}, {"id": 169, "string": "s j\u22121 : to name but a few , these include cooperation with the Hague Tribunal , efforts made so far in prosecuting corruption , restructuring the economy and finances and greater commitment and sincerity in eliminating the obstacles to the return of Croatia 's Serbian population ."}, {"id": 170, "string": "s j\u22124 : by signing a border arbitration agreement with its neighbour Slovenia , the new Croatian Government has not only eliminated an obstacle to the negotiating process , but has also paved the way for the resolution of other issues ."}, {"id": 171, "string": "Conventional Document-level MT These can further be classified into two main categories."}, {"id": 172, "string": "The first, which use cache-based memories (Tiedemann, 2010; Gong et al., 2011) and the second, which focus on specific discourse phenomema like anaphora (Hardmeier and Federico, 2010) , lexical cohesion (Xiong et al., 2013; Gong et al., 2015; Mascarell, 2017) and coreference (Miculicich Werlen and Popescu-Belis, 2017) to name a few."}, {"id": 173, "string": "Most of these approaches are, however, restrictive as they mostly involve using handcrafted features similar to the conventional MT approaches."}, {"id": 174, "string": "Document-level Neural MT The works here can again be divided into two categories: onlineuse previous context only, and offline-use both past and future contexts."}, {"id": 175, "string": "Most works fall into the former category, with those that use only a single previous sentence in the source (Jean et al., 2017; Tiedemann and Scherrer, 2017; ; one previous sentence both in source and target (Bawden et al., 2018) ; more than one previous source sentence (Wang et al., 2017; ; or a few previous source and target sentences (Miculicich et al., 2018) ."}, {"id": 176, "string": "Apart from fixing the context length, there are few works which use cache-based memories to store contextual information (Tu et al., 2018; Kuang et al., 2018) and use that to improve the MT system performance."}, {"id": 177, "string": "A recent work  reports promising results when using the complete history for translating online conversations."}, {"id": 178, "string": "For the offline setting, however, there is only one work that effectively uses the full documentcontext on both source and target-side using memory networks ."}, {"id": 179, "string": "The debate in document-level NMT today is mostly about how much of the previous context to use and there has been no comparison between the online and offline setting except using only one previous and following sentence ."}, {"id": 180, "string": "Sparse Attention Sparse attention and its constrained variants have been used to address the coverage problem in NMT (Malaviya et al., 2018) by limiting the amount of attention that each source word can receive."}, {"id": 181, "string": "Apart from NMT, sparse attention has been shown to yield promising results for NLP tasks of textual entailment (Martins and Astudillo, 2016) and summarization (Niculae and Blondel, 2017) ."}, {"id": 182, "string": "Conclusion We have proposed a novel approach to hierarchical attention for context-aware NMT, based on sparse attention, which is both scalable and efficient."}, {"id": 183, "string": "Experiments and evaluation on three English\u2192German datasets in offline and online document MT settings show that our approach surpasses context-agnostic and two recent contextaware baselines."}, {"id": 184, "string": "The qualitative analysis shows that the sparsity at sentence-level allows our model to identify key sentences in the document context and the sparsity at word-level allows it to focus on key words in those sentences allowing for an efficient compression of memory."}, {"id": 185, "string": "In future work, we plan to dig deeper on the benefits of sparse attention in terms of better interpretability of contextaware NMT models."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 18}, {"section": "Neural Machine Translation", "n": "2.1", "start": 19, "end": 27}, {"section": "Document-level Machine Translation", "n": "2.2", "start": 28, "end": 34}, {"section": "Proposed Approach", "n": "3", "start": 35, "end": 38}, {"section": "Document-level Context Layer", "n": "3.1", "start": 39, "end": 41}, {"section": "Hierarchical Attention", "n": "3.1.1", "start": 42, "end": 62}, {"section": "Value Reading: The set of word-level values", "n": "4.", "start": 63, "end": 66}, {"section": "Flat Attention", "n": "3.1.2", "start": 67, "end": 70}, {"section": "Context Gating", "n": "3.2", "start": 71, "end": 73}, {"section": "Integrated Model", "n": "3.3", "start": 74, "end": 112}, {"section": "Main Results", "n": "4.2", "start": 113, "end": 156}, {"section": "Related Work", "n": "5", "start": 157, "end": 181}, {"section": "Conclusion", "n": "6", "start": 182, "end": 185}], "figures": [{"filename": "../figure/image/963-Table2-1.png", "caption": "Table 2: BLEU and Meteor scores for variants of our model and two context-agnostic baselines for offline document MT. bold: Best performance. All reported results for our model are significantly better than both baselines.", "page": 5, "bbox": {"x1": 72.0, "x2": 527.04, "y1": 61.44, "y2": 156.0}}, {"filename": "../figure/image/963-Table3-1.png", "caption": "Table 3: BLEU and Meteor scores for variants of our model and three baselines for online document MT. bold: Best performance. F, \u2666, \u2663: Statistically significantly better than our implementations of Zhang et al. (2018), Miculicich et al. (2018), or both. All reported results for our model are significantly better than the Transformer.", "page": 5, "bbox": {"x1": 72.0, "x2": 527.04, "y1": 201.6, "y2": 310.08}}, {"filename": "../figure/image/963-Table4-1.png", "caption": "Table 4: Accuracy on contrastive test set with regard to antecedent distance (in sentences) on TED Talks. Antecedent distance 0 means the pronoun occurs in the same sentence as the antecedent.", "page": 6, "bbox": {"x1": 306.71999999999997, "x2": 528.0, "y1": 61.44, "y2": 240.0}}, {"filename": "../figure/image/963-Figure1-1.png", "caption": "Figure 1: Hierarchical Context Attention module.", "page": 2, "bbox": {"x1": 338.88, "x2": 494.4, "y1": 61.44, "y2": 256.32}}, {"filename": "../figure/image/963-Table6-1.png", "caption": "Table 6: Example of noun disambiguation. Source context sentences are ordered in decreasing probability mass. The intensity of color corresponds to the attention given to a specific word before rescaling.", "page": 7, "bbox": {"x1": 307.68, "x2": 525.12, "y1": 62.879999999999995, "y2": 224.16}}, {"filename": "../figure/image/963-Table7-1.png", "caption": "Table 7: Example of pronoun disambiguation. Context sentences are ordered in decreasing probability mass.", "page": 7, "bbox": {"x1": 307.68, "x2": 525.12, "y1": 294.71999999999997, "y2": 457.91999999999996}}, {"filename": "../figure/image/963-Table5-1.png", "caption": "Table 5: Model complexity for Encoder Context integration models (News-Commentary).", "page": 7, "bbox": {"x1": 73.92, "x2": 286.08, "y1": 61.44, "y2": 136.32}}, {"filename": "../figure/image/963-Figure2-1.png", "caption": "Figure 2: Encoder-side context integration.", "page": 3, "bbox": {"x1": 324.96, "x2": 508.32, "y1": 61.44, "y2": 245.28}}, {"filename": "../figure/image/963-Table1-1.png", "caption": "Table 1: Training/development/test corpora statistics: number of sentences (K stands for thousands and M for millions), and average document length (in sentences).", "page": 4, "bbox": {"x1": 316.8, "x2": 513.12, "y1": 61.44, "y2": 106.08}}, {"filename": "../figure/image/963-Figure3-1.png", "caption": "Figure 3: Decoder-side context integration.", "page": 4, "bbox": {"x1": 89.75999999999999, "x2": 272.15999999999997, "y1": 61.44, "y2": 301.92}}]}