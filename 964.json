{"title": "Unsupervised Discrete Sentence Representation Learning for Interpretable Neural Dialog Generation", "abstract": "The encoder-decoder dialog model is one of the most prominent methods used to build dialog systems in complex domains. Yet it is limited because it cannot output interpretable actions as in traditional systems, which hinders humans from understanding its generation process. We present an unsupervised discrete sentence representation learning method that can integrate with any existing encoderdecoder dialog models for interpretable response generation. Building upon variational autoencoders (VAEs), we present two novel models, DI-VAE and DI-VST that improve VAEs and can discover interpretable semantics via either auto encoding or context predicting. Our methods have been validated on real-world dialog datasets to discover semantic representations and enhance encoder-decoder models with interpretable generation. 1", "text": [{"id": 0, "string": "Introduction Classic dialog systems rely on developing a meaning representation to represent the utterances from both the machine and human users (Larsson and Traum, 2000; Bohus et al., 2007) ."}, {"id": 1, "string": "The dialog manager of a conventional dialog system outputs the system's next action in a semantic frame that usually contains hand-crafted dialog acts and slot values (Williams and Young, 2007) ."}, {"id": 2, "string": "Then a natural language generation module is used to generate the system's output in natural language based on the given semantic frame."}, {"id": 3, "string": "This approach suffers from generalization to more complex domains because it soon become intractable to man-ually design a frame representation that covers all of the fine-grained system actions."}, {"id": 4, "string": "The recently developed neural dialog system is one of the most prominent frameworks for developing dialog agents in complex domains."}, {"id": 5, "string": "The basic model is based on encoder-decoder networks  and can learn to generate system responses without the need for hand-crafted meaning representations and other annotations."}, {"id": 6, "string": "Although generative dialog models have advanced rapidly (Serban et al., 2016; Li et al., 2016; , they cannot provide interpretable system actions as in the conventional dialog systems."}, {"id": 7, "string": "This inability limits the effectiveness of generative dialog models in several ways."}, {"id": 8, "string": "First, having interpretable system actions enables human to understand the behavior of a dialog system and better interpret the system intentions."}, {"id": 9, "string": "Also, modeling the high-level decision-making policy in dialogs enables useful generalization and dataefficient domain adaptation (Ga\u0161i\u0107 et al., 2010) ."}, {"id": 10, "string": "Therefore, the motivation of this paper is to develop an unsupervised neural recognition model that can discover interpretable meaning representations of utterances (denoted as latent actions) as a set of discrete latent variables from a large unlabelled corpus as shown in Figure 1 ."}, {"id": 11, "string": "The discovered meaning representations will then be integrated with encoder decoder networks to achieve interpretable dialog generation while preserving all the merit of neural dialog systems."}, {"id": 12, "string": "We focus on learning discrete latent representations instead of dense continuous ones because discrete variables are easier to interpret (van den Oord et al., 2017) and can naturally correspond to categories in natural languages, e.g."}, {"id": 13, "string": "topics, dialog acts and etc."}, {"id": 14, "string": "Despite the difficulty of learning discrete latent variables in neural networks, the recently proposed Gumbel-Softmax offers a reliable way to back-propagate through discrete variables (Maddison et al., 2016; Jang et al., 2016) ."}, {"id": 15, "string": "However, we found a simple combination of sentence variational autoencoders (VAEs) (Bowman et al., 2015) and Gumbel-Softmax fails to learn meaningful discrete representations."}, {"id": 16, "string": "We then highlight the anti-information limitation of the evidence lowerbound objective (ELBO) in VAEs and improve it by proposing Discrete Information VAE (DI-VAE) that maximizes the mutual information between data and latent actions."}, {"id": 17, "string": "We further enrich the learning signals beyond auto encoding by extending Skip Thought (Kiros et al., 2015) to Discrete Information Variational Skip Thought (DI-VST) that learns sentence-level distributional semantics."}, {"id": 18, "string": "Finally, an integration mechanism is presented that combines the learned latent actions with encoder decoder models."}, {"id": 19, "string": "The proposed systems are tested on several realworld dialog datasets."}, {"id": 20, "string": "Experiments show that the proposed methods significantly outperform the standard VAEs and can discover meaningful latent actions from these datasets."}, {"id": 21, "string": "Also, experiments confirm the effectiveness of the proposed integration mechanism and show that the learned latent actions can control the sentence-level attributes of the generated responses and provide humaninterpretable meaning representations."}, {"id": 22, "string": "Related Work Our work is closely related to research in latent variable dialog models."}, {"id": 23, "string": "The majority of models are based on Conditional Variational Autoencoders (CVAEs) (Serban et al., 2016; Cao and Clark, 2017) with continuous latent variables to better model the response distribution and encourage diverse responses."}, {"id": 24, "string": "further introduced dialog acts to guide the learning of the CVAEs."}, {"id": 25, "string": "Discrete latent variables have also been used for task-oriented dialog systems (Wen et al., 2017) , where the latent space is used to represent intention."}, {"id": 26, "string": "The second line of related work is enriching the dialog context encoder with more fine-grained information than the dialog history."}, {"id": 27, "string": "Li et al., (2016) captured speakers' characteristics by encoding background information and speaking style into the distributed embeddings."}, {"id": 28, "string": "Xing et al., (2016) maintain topic encoding based on Latent Dirichlet Allocation (LDA) (Blei et al., 2003) of the conversation to encourage the model to output more topic coherent responses."}, {"id": 29, "string": "The proposed method also relates to sentence representation learning using neural networks."}, {"id": 30, "string": "Most work learns continuous distributed representations of sentences from various learning signals (Hill et al., 2016) , e.g."}, {"id": 31, "string": "the Skip Thought learns representations by predicting the previous and next sentences (Kiros et al., 2015) ."}, {"id": 32, "string": "Another area of work focused on learning regularized continuous sentence representation, which enables sentence generation by sampling the latent space (Bowman et al., 2015; Kim et al., 2017) ."}, {"id": 33, "string": "There is less work on discrete sentence representations due to the difficulty of passing gradients through discrete outputs."}, {"id": 34, "string": "The recently developed Gumbel Softmax (Jang et al., 2016; Maddison et al., 2016) and vector quantization (van den Oord et al., 2017) enable us to train discrete variables."}, {"id": 35, "string": "Notably, discrete variable models have been proposed to discover document topics (Miao et al., 2016) and semi-supervised sequence transaction (Zhou and Neubig, 2017) Our work differs from these as follows: (1) we focus on learning interpretable variables; in prior research the semantics of latent variables are mostly ignored in the dialog generation setting."}, {"id": 36, "string": "(2) we improve the learning objective for discrete VAEs and overcome the well-known posterior collapsing issue (Bowman et al., 2015; Chen et al., 2016) ."}, {"id": 37, "string": "(3) we focus on unsupervised learning of salient features in dialog responses instead of hand-crafted features."}, {"id": 38, "string": "Proposed Methods Our formulation contains three random variables: the dialog context c, the response x and the latent action z."}, {"id": 39, "string": "The context often contains the discourse history in the format of a list of utterances."}, {"id": 40, "string": "The response is an utterance that contains a list of word tokens."}, {"id": 41, "string": "The latent action is a set of discrete variables that define high-level attributes of x."}, {"id": 42, "string": "Before introducing the proposed framework, we first identify two key properties that are essential in or-der for z to be interpretable: 1. z should capture salient sentence-level features about the response x."}, {"id": 43, "string": "2."}, {"id": 44, "string": "The meaning of latent symbols z should be independent of the context c. The first property is self-evident."}, {"id": 45, "string": "The second can be explained: assume z contains a single discrete variable with K classes."}, {"id": 46, "string": "Since the context c can be any dialog history, if the meaning of each class changes given a different context, then it is difficult to extract an intuitive interpretation by only looking at all responses with class k \u2208 [1, K]."}, {"id": 47, "string": "Therefore, the second property looks for latent actions that have context-independent semantics so that each assignment of z conveys the same meaning in all dialog contexts."}, {"id": 48, "string": "With the above definition of interpretable latent actions, we first introduce a recognition network R : q R (z|x) and a generation network G. The role of R is to map an sentence to the latent variable z and the generator G defines the learning signals that will be used to train z's representation."}, {"id": 49, "string": "Notably, our recognition network R does not depend on the context c as has been the case in prior work (Serban et al., 2016) ."}, {"id": 50, "string": "The motivation of this design is to encourage z to capture context-independent semantics, which are further elaborated in Section 3.4."}, {"id": 51, "string": "With the z learned by R and G, we then introduce an encoder decoder network F : p F (x|z, c) and and a policy network \u03c0 : p \u03c0 (z|c)."}, {"id": 52, "string": "At test time, given a context c, the policy network and encoder decoder will work together to generate the next response vi\u00e3 x = p F (x|z \u223c p \u03c0 (z|c), c)."}, {"id": 53, "string": "In short, R, G, F and \u03c0 are the four components that comprise our proposed framework."}, {"id": 54, "string": "The next section will first focus on developing R and G for learning interpretable z and then will move on to integrating R with F and \u03c0 in Section 3.3."}, {"id": 55, "string": "Learning Sentence Representations from Auto-Encoding Our baseline model is a sentence VAE with discrete latent space."}, {"id": 56, "string": "We use an RNN as the recognition network to encode the response x."}, {"id": 57, "string": "Its last hidden state h R |x| is used to represent x."}, {"id": 58, "string": "We define z to be a set of K-way categorical variables z = {z 1 ...z m ...z M }, where M is the number of variables."}, {"id": 59, "string": "For each z m , its posterior distribution is defined as q R (z m |x) = Softmax(W q h R |x| + b q )."}, {"id": 60, "string": "During training, we use the Gumbel-Softmax trick to sample from this distribution and obtain lowvariance gradients."}, {"id": 61, "string": "To map the latent samples to the initial state of the decoder RNN, we define {e 1 ...e m ...e M } where e m \u2208 R K\u00d7D and D is the generator cell size."}, {"id": 62, "string": "Thus the initial state of the generator is: h G 0 = M m=1 e m (z m )."}, {"id": 63, "string": "Finally, the generator RNN is used to reconstruct the response given h G 0 ."}, {"id": 64, "string": "VAEs is trained to maxmimize the evidence lowerbound objective (ELBO) (Kingma and Welling, 2013) ."}, {"id": 65, "string": "For simplicity, later discussion drops the subscript m in z m and assumes a single latent z."}, {"id": 66, "string": "Since each z m is independent, we can easily extend the results below to multiple variables."}, {"id": 67, "string": "Anti-Information Limitation of ELBO It is well-known that sentence VAEs are hard to train because of the posterior collapse issue."}, {"id": 68, "string": "Many empirical solutions have been proposed: weakening the decoder, adding auxiliary loss etc."}, {"id": 69, "string": "(Bowman et al., 2015; Chen et al., 2016; ."}, {"id": 70, "string": "We argue that the posterior collapse issue lies in ELBO and we offer a novel decomposition to understand its behavior."}, {"id": 71, "string": "First, instead of writing ELBO for a single data point, we write it as an expectation over a dataset: L VAE = E x [E q R (z|x) [log p G (x|z)] \u2212 KL(q R (z|x) p(z))] (1) We can expand the KL term as Eq."}, {"id": 72, "string": "2 (derivations in Appendix A.1) and rewrite ELBO as: E x [KL(q R (z|x) p(z))] = (2) I(Z, X)+KL(q(z) p(z)) L VAE = E q(z|x)p(x) [log p(x|z)] \u2212 I(Z, X) \u2212 KL(q(z) p(z)) (3) where q(z) = E x [q R (z|x)] and I(Z, X) is the mutual information between Z and X."}, {"id": 73, "string": "This expansion shows that the KL term in ELBO is trying to reduce the mutual information between latent variables and the input data, which explains why VAEs often ignore the latent variable, especially when equipped with powerful decoders."}, {"id": 74, "string": "VAE with Information Maximization and Batch Prior Regularization A natural solution to correct the anti-information issue in Eq."}, {"id": 75, "string": "3 is to maximize both the data likeli-hood lowerbound and the mutual information between z and the input data: L VAE + I(Z, X) = E q R (z|x)p(x) [log p G (x|z)] \u2212 KL(q(z) p(z)) (4) Therefore, jointly optimizing ELBO and mutual information simply cancels out the informationdiscouraging term."}, {"id": 76, "string": "Also, we can still sample from the prior distribution for generation because of KL(q(z) p(z))."}, {"id": 77, "string": "Eq."}, {"id": 78, "string": "4 is similar to the objectives used in adversarial autoencoders (Makhzani et al., 2015; Kim et al., 2017) ."}, {"id": 79, "string": "Our derivation provides a theoretical justification to their superior performance."}, {"id": 80, "string": "Notably, Eq."}, {"id": 81, "string": "4 arrives at the same loss function proposed in infoVAE (Zhao S et al., 2017) ."}, {"id": 82, "string": "However, our derivation is different, offering a new way to understand ELBO behavior."}, {"id": 83, "string": "The remaining challenge is how to minimize KL(q(z) p(z)), since q(z) is an expectation over q(z|x)."}, {"id": 84, "string": "When z is continuous, prior work has used adversarial training (Makhzani et al., 2015; Kim et al., 2017) or Maximum Mean Discrepancy (MMD) (Zhao S et al., 2017) to regularize q(z)."}, {"id": 85, "string": "It turns out that minimizing KL(q(z) p(z)) for discrete z is much simpler than its continuous counterparts."}, {"id": 86, "string": "Let x n be a sample from a batch of N data points."}, {"id": 87, "string": "Then we have: q(z) \u2248 1 N N n=1 q(z|x n ) = q (z) (5) where q (z) is a mixture of softmax from the posteriors q(z|x n ) of each x n ."}, {"id": 88, "string": "We can approximate KL(q(z) p(z)) by: KL(q (z) p(z)) = K k=1 q (z = k) log q (z = k) p(z = k) (6) We refer to Eq."}, {"id": 89, "string": "6 as Batch Prior Regularization (BPR)."}, {"id": 90, "string": "When N approaches infinity, q (z) approaches the true marginal distribution of q(z)."}, {"id": 91, "string": "In practice, we only need to use the data from each mini-batch assuming that the mini batches are randomized."}, {"id": 92, "string": "Last, BPR is fundamentally different from multiplying a coefficient < 1 to anneal the KL term in VAE (Bowman et al., 2015) ."}, {"id": 93, "string": "This is because BPR is a non-linear operation log sum exp."}, {"id": 94, "string": "For later discussion, we denote our discrete infoVAE with BPR as DI-VAE."}, {"id": 95, "string": "Learning Sentence Representations from the Context DI-VAE infers sentence representations by reconstruction of the input sentence."}, {"id": 96, "string": "Past research in distributional semantics has suggested the meaning of language can be inferred from the adjacent context (Harris, 1954; Hill et al., 2016) ."}, {"id": 97, "string": "The distributional hypothesis is especially applicable to dialog since the utterance meaning is highly contextual."}, {"id": 98, "string": "For example, the dialog act is a wellknown utterance feature and depends on dialog state (Austin, 1975; Stolcke et al., 2000) ."}, {"id": 99, "string": "Thus, we introduce a second type of latent action based on sentence-level distributional semantics."}, {"id": 100, "string": "Skip thought (ST) is a powerful sentence representation that captures contextual information (Kiros et al., 2015) ."}, {"id": 101, "string": "ST uses an RNN to encode a sentence, and then uses the resulting sentence representation to predict the previous and next sentences."}, {"id": 102, "string": "Inspired by ST's robust performance across multiple tasks (Hill et al., 2016) , we adapt our DI-VAE to Discrete Information Variational Skip Thought (DI-VST) to learn discrete latent actions that model distributional semantics of sentences."}, {"id": 103, "string": "We use the same recognition network from DI-VAE to output z's posterior distribution q R (z|x)."}, {"id": 104, "string": "Given the samples from q R (z|x), two RNN generators are used to predict the previous sentence x p and the next sentences x n ."}, {"id": 105, "string": "Finally, the learning objective is to maximize: L DI-VST = E q R (z|x)p(x)) [log(p n G (x n |z)p p G (x p |z))] \u2212 KL(q(z) p(z)) (7) Integration with Encoder Decoders We now describe how to integrate a given q R (z|x) with an encoder decoder and a policy network."}, {"id": 106, "string": "Let the dialog context c be a sequence of utterances."}, {"id": 107, "string": "Then a dialog context encoder network can encode the dialog context into a distributed representation h e = F e (c)."}, {"id": 108, "string": "The decoder F d can generate the responsesx = F d (h e , z) using samples from q R (z|x)."}, {"id": 109, "string": "Meanwhile, we train \u03c0 to predict the aggregated posterior E p(x|c) [q R (z|x)] from c via maximum likelihood training."}, {"id": 110, "string": "This model is referred as Latent Action Encoder Decoder (LAED) with the following objective."}, {"id": 111, "string": "L LAED (\u03b8 F , \u03b8 \u03c0 ) = E q R (z|x)p(x,c) [logp \u03c0 (z|c) + log p F (x|z, c)] (8) Also simply augmenting the inputs of the decoders with latent action does not guarantee that the generated response exhibits the attributes of the give action."}, {"id": 112, "string": "Thus we use the controllable text generation framework (Hu et al., 2017) by introducing L Attr , which reuses the same recognition network q R (z|x) as a fixed discriminator to penalize the decoder if its generated responses do not reflect the attributes in z. L Attr (\u03b8 F ) = E q R (z|x)p(c,x) [log q R (z|F(c, z))] (9) Since it is not possible to propagate gradients through the discrete outputs at F d at each word step, we use a deterministic continuous relaxation (Hu et al., 2017) by replacing output of F d with the probability of each word."}, {"id": 113, "string": "Let o t be the normalized probability at step t \u2208 [1, |x|], the inputs to q R at time t are then the sum of word embeddings weighted by o t , i.e."}, {"id": 114, "string": "h R t = RNN(h R t\u22121 , Eo t ) and E is the word embedding matrix."}, {"id": 115, "string": "Finally this loss is combined with L LAED and a hyperparameter \u03bb to have Attribute Forcing LAED."}, {"id": 116, "string": "L attrLAED = L LAED + \u03bbL Attr (10) Relationship with Conditional VAEs It is not hard to see L LAED is closely related to the objective of CVAEs for dialog generation (Serban et al., 2016; , which is: L CVAE = E q [log p(x|z, c)]\u2212KL(q(z|x, c) p(z|c)) (11) Despite their similarities, we highlight the key differences that prohibit CVAE from achieving interpretable dialog generation."}, {"id": 117, "string": "First L CVAE encourages I(x, z|c) (Agakov, 2005), which learns z that capture context-dependent semantics."}, {"id": 118, "string": "More intuitively, z in CVAE is trained to generate x via p(x|z, c) so the meaning of learned z can only be interpreted along with its context c. Therefore this violates our goal of learning context-independent semantics."}, {"id": 119, "string": "Our methods learn q R (z|x) that only depends on x and trains q R separately to ensure the semantics of z are interpretable standalone."}, {"id": 120, "string": "Experiments and Results The proposed methods are evaluated on four datasets."}, {"id": 121, "string": "The first corpus is Penn Treebank (PTB) (Marcus et al., 1993) used to evaluate sentence VAEs (Bowman et al., 2015) ."}, {"id": 122, "string": "We used the version pre-processed by Mikolov (Mikolov et al., 2010) ."}, {"id": 123, "string": "The second dataset is the Stanford Multi-Domain Dialog (SMD) dataset that contains 3,031 human-Woz, task-oriented dialogs collected from 3 different domains (navigation, weather and scheduling) (Eric and Manning, 2017) ."}, {"id": 124, "string": "The other two datasets are chat-oriented data: Daily Dialog (DD) and Switchboard (SW) (Godfrey and Holliman, 1997), which are used to test whether our methods can generalize beyond task-oriented dialogs but also to to open-domain chatting."}, {"id": 125, "string": "DD contains 13,118 multi-turn human-human dialogs annotated with dialog acts and emotions."}, {"id": 126, "string": "(Li et al., 2017) ."}, {"id": 127, "string": "SW has 2,400 human-human telephone conversations that are annotated with topics and dialog acts."}, {"id": 128, "string": "SW is a more challenging dataset because it is transcribed from speech which contains complex spoken language phenomenon, e.g."}, {"id": 129, "string": "hesitation, self-repair etc."}, {"id": 130, "string": "Comparing Discrete Sentence Representation Models The first experiment used PTB and DD to evaluate the performance of the proposed methods in learning discrete sentence representations."}, {"id": 131, "string": "We implemented DI-VAE and DI-VST using GRU-RNN (Chung et al., 2014) and trained them using Adam (Kingma and Ba, 2014) ."}, {"id": 132, "string": "Besides the proposed methods, the following baselines are compared."}, {"id": 133, "string": "Unregularized models: removing the KL(q|p) term from DI-VAE and DI-VST leads to a simple discrete autoencoder (DAE) and discrete skip thought (DST) with stochastic discrete hidden units."}, {"id": 134, "string": "ELBO models: the basic discrete sentence VAE (DVAE) or variational skip thought (DVST) that optimizes ELBO with regularization term KL(q(z|x) p(z))."}, {"id": 135, "string": "We found that standard training failed to learn informative latent actions for either DVAE or DVST because of the posterior collapse."}, {"id": 136, "string": "Therefore, KL-annealing (Bowman et al., 2015) and bag-of-word loss  are used to force these two models learn meaningful representations."}, {"id": 137, "string": "We also include the results for VAE with continuous latent variables reported on the same PTB ."}, {"id": 138, "string": "Additionally, we report the perplexity from a standard GRU-RNN language model (Zaremba et al., 2014) ."}, {"id": 139, "string": "The evaluation metrics include reconstruction perplexity (PPL), KL(q(z) p(z)) and the mutual information between input data and latent vari-ables I (x, z) ."}, {"id": 140, "string": "Intuitively a good model should achieve low perplexity and KL distance, and simultaneously achieve high I(x, z)."}, {"id": 141, "string": "The discrete latent space for all models are M =20 and K=10."}, {"id": 142, "string": "Mini-batch size is 30."}, {"id": 143, "string": "Table 1 shows that all models achieve better perplexity than an RNNLM, which shows they manage to learn meaningful q(z|x)."}, {"id": 144, "string": "First, for autoencoding models, DI-VAE is able to achieve the best results in all metrics compared other methods."}, {"id": 145, "string": "We found DAEs quickly learn to reconstruct the input but they are prone to overfitting during training, which leads to lower performance on the test data compared to DI-VAE."}, {"id": 146, "string": "Also, since there is no regularization term in the latent space, q(z) is very different from the p(z) which prohibits us from generating sentences from the latent space."}, {"id": 147, "string": "In fact, DI-VAE enjoys the same linear interpolation properties reported in (Bowman et al., 2015) (See Appendix A.2)."}, {"id": 148, "string": "As for DVAEs, it achieves zero I(x, z) in standard training and only manages to learn some information when training with KL-annealing and bag-of-word loss."}, {"id": 149, "string": "On the other hand, our methods achieve robust performance without the need for additional processing."}, {"id": 150, "string": "Similarly, the proposed DI-VST is able to achieve the lowest PPL and similar KL compared to the strongly regularized DVST."}, {"id": 151, "string": "Interestingly, although DST is able to achieve the highest I(x, z), but PPL is not further improved."}, {"id": 152, "string": "These results confirm the effectiveness of the proposed BPR in terms of regularizing q(z) while learning meaningful posterior q(z|x)."}, {"id": 153, "string": "In order to understand BPR's sensitivity to batch size N , a follow-up experiment varied the batch size from 2 to 60 (If N =1, DI-VAE is equivalent to DVAE)."}, {"id": 154, "string": "Figure 2 show that as N increases, perplexity, I(x, z) monotonically improves, while KL(q p) only increases from 0 to 0.159."}, {"id": 155, "string": "After N > 30, the performance plateaus."}, {"id": 156, "string": "Therefore, using mini-batch is an efficient trade-off between q(z) estimation and computation speed."}, {"id": 157, "string": "The last experiment in this section investigates the relation between representation learning and the dimension of the latent space."}, {"id": 158, "string": "We set a fixed budget by restricting the maximum number of modes to be about 1000, i.e."}, {"id": 159, "string": "K M \u2248 1000."}, {"id": 160, "string": "We then vary the latent space size and report the same evaluation metrics."}, {"id": 161, "string": "Table 2 shows that models with multiple small latent variables perform significantly better than those with large and few latent variables."}, {"id": 162, "string": "K, M K M PPL KL(q p) I(x, z) 1000, 1 1000 75.61 0.032 0.335 10, 3 1000 71.42 0.071 0.607 4, 5 1024 68.43 0.088 0.809 Table 2 : DI-VAE on PTB with different latent dimensions under the same budget."}, {"id": 163, "string": "Interpreting Latent Actions The next question is to interpret the meaning of the learned latent action symbols."}, {"id": 164, "string": "To achieve this, the latent action of an utterance x n is obtained from a greedy mapping: a n = argmax k q R (z = k|x n )."}, {"id": 165, "string": "We set M =3 and K=5, so that there are at most 125 different latent actions, and each x n can now be represented by a 1 -a 2 -a 3 , e.g."}, {"id": 166, "string": "\"How are you?\""}, {"id": 167, "string": "\u2192 1-4-2."}, {"id": 168, "string": "Assuming that we have access to manually clustered data according to certain classes (e.g."}, {"id": 169, "string": "dialog acts), it is unfair to use classic cluster measures (Vinh et al., 2010) to evaluate the clusters from latent actions."}, {"id": 170, "string": "This is because the uniform prior p(z) evenly distribute the data to all possible latent actions, so that it is expected that frequent classes will be assigned to several latent actions."}, {"id": 171, "string": "Thus we utilize the homogeneity metric (Rosenberg and Hirschberg, 2007 ) that measures if each latent action contains only members of a single class."}, {"id": 172, "string": "We tested this on the SW and DD, which contain human annotated features and we report the latent actions' homogeneity w.r.t these features in Table 3 ."}, {"id": 173, "string": "On DD, results show DI-VST SW DD Act Topic Act Emotion DI-VAE 0.48 0.08 0.18 0.09 DI-VST 0.33 0.13 0.34 0.12 works better than DI-VAE in terms of creating actions that are more coherent for emotion and dialog acts."}, {"id": 174, "string": "The results are interesting on SW since DI-VST performs worse on dialog acts than DI-VAE."}, {"id": 175, "string": "One reason is that the dialog acts in SW are more fine-grained (42 acts) than the ones in DD (5 acts) so that distinguishing utterances based on words in x is more important than the information in the neighbouring utterances."}, {"id": 176, "string": "We then apply the proposed methods to SMD which has no manual annotation and contains taskoriented dialogs."}, {"id": 177, "string": "Two experts are shown 5 randomly selected utterances from each latent action and are asked to give an action name that can describe as many of the utterances as possible."}, {"id": 178, "string": "Then an Amazon Mechanical Turk study is conducted to evaluate whether other utterances from the same latent action match these titles."}, {"id": 179, "string": "5 workers see the action name and a different group of 5 utterances from that latent action."}, {"id": 180, "string": "They are asked to select all utterances that belong to the given actions, which tests the homogeneity of the utterances falling in the same cluster."}, {"id": 181, "string": "Negative samples are included to prevent random selection."}, {"id": 182, "string": "Table 4 shows that both methods work well and DI-VST achieved better homogeneity than DI-VAE."}, {"id": 183, "string": "Since DI-VAE is trained to reconstruct its input and DI-VST is trained to model the context, they group utterances in different ways."}, {"id": 184, "string": "For example, DI-VST would group \"Can I get a restaurant\", \"I am looking for a restaurant\" into one action where Dialog Response Generation with Latent Actions Finally we implement an LAED as follows."}, {"id": 185, "string": "The encoder is a hierarchical recurrent encoder (Serban et al., 2016) with bi-directional GRU-RNNs as the utterance encoder and a second GRU-RNN as the discourse encoder."}, {"id": 186, "string": "The discourse encoder output its last hidden state h e |x| ."}, {"id": 187, "string": "The decoder is another GRU-RNN and its initial state of the decoder is obtained by h d 0 = h e |x| + M m=1 e m (z m ), where z comes from the recognition network of the proposed methods."}, {"id": 188, "string": "The policy network \u03c0 is a 2-layer multi-layer perceptron (MLP) that models p \u03c0 (z|h e |x| )."}, {"id": 189, "string": "We use up to the previous 10 utterances as the dialog context and denote the LAED using DI-VAE latent actions as AE-ED and the one uses DI-VST as ST-ED."}, {"id": 190, "string": "First we need to confirm whether an LAED can generate responses that are consistent with the semantics of a given z."}, {"id": 191, "string": "To answer this, we use a pre-trained recognition network R to check if a generated response carries the attributes in the given action."}, {"id": 192, "string": "We generate dialog responses on a test dataset viax = F(z \u223c \u03c0(c), c) with greedy RNN decoding."}, {"id": 193, "string": "The generated responses are passed into the R and we measure attribute accuracy by countingx as correct if z = argmax k q R (k|x)."}, {"id": 194, "string": "Table 6 : Results for attribute accuracy with and without attribute loss."}, {"id": 195, "string": "responses are highly consistent with the given latent actions."}, {"id": 196, "string": "Also, latent actions from DI-VAE achieve higher attribute accuracy than the ones from DI-VST, because z from auto-encoding is explicitly trained for x reconstruction."}, {"id": 197, "string": "Adding L attr is effective in forcing the decoder to take z into account during its generation, which helps the most in more challenging open-domain chatting data, e.g."}, {"id": 198, "string": "SW and DD."}, {"id": 199, "string": "The accuracy of ST-ED on SW is worse than the other two datasets."}, {"id": 200, "string": "The reason is that SW contains many short utterances that can be either a continuation of the same speaker or a new turn from the other speaker, whereas the responses in the other two domains are always followed by a different speaker."}, {"id": 201, "string": "The more complex context pattern in SW may require special treatment."}, {"id": 202, "string": "We leave it for future work."}, {"id": 203, "string": "The second experiment checks if the policy network \u03c0 is able to predict the right latent action given just the dialog context."}, {"id": 204, "string": "We report both accuracy, i.e."}, {"id": 205, "string": "argmax k q R (k|x) = argmax k p \u03c0 (k |c) and perplexity of p \u03c0 (z|c)."}, {"id": 206, "string": "The perplexity measure is more useful for open domain dialogs because decision-making in complex dialogs is often one-to-many given a similar context ."}, {"id": 207, "string": "Table 7 shows the prediction scores on SMD AE-ED 3.045 (51.5% sys 52.4% usr 50.5%) ST-ED 1.695 (75.5% sys 82.1% usr 69.2%) DD SW AE-ED 4.47 (35.8%) 4.46 (31.68%) ST-ED 3.89 (47.5%) 3.68 (33.2%) Table 7 : Performance of policy network."}, {"id": 208, "string": "L attr is included in training."}, {"id": 209, "string": "the three dialog datasets."}, {"id": 210, "string": "These scores provide useful insights to understand the complexity of a dialog dataset."}, {"id": 211, "string": "For example, accuracy on opendomain chatting is harder than the task-oriented SMD data."}, {"id": 212, "string": "Also, it is intuitive that predicting system actions is easier than predicting user actions on SMD."}, {"id": 213, "string": "Also, in general the prediction scores for ST-ED are higher the ones for AE-ED."}, {"id": 214, "string": "The reason is related to our previous discussion about the granularity of the latent actions."}, {"id": 215, "string": "Since latent actions from DI-VST mainly model the the type of utterances used in certain types of context, it is easier for the policy network to predict latent actions from DI-VST."}, {"id": 216, "string": "Therefore, choosing the type of latent actions is a design choice and depends on the type of interpretability that is needed."}, {"id": 217, "string": "We finish with an example generated from the two variants of LAED on SMD as shown in Table 8 ."}, {"id": 218, "string": "Given a dialog context, our systems are able to output a probability distribution over different latent actions that have interpretable meaning along with their natural language realizations."}, {"id": 219, "string": "c usr: Where does my friend live?"}, {"id": 220, "string": "Model Action Generated Responses AE-ED give loc info -Tom is at 753 University Ave, and a road block."}, {"id": 221, "string": "p(z|c)=0.34 -Comfort Inn is at 7 miles away."}, {"id": 222, "string": "give user info -Your home address is 5671 barringer street."}, {"id": 223, "string": "p(z|c)=0.22 -Your home is at 10 ames street."}, {"id": 224, "string": "ST-ED give loc info -Jill's house is 8 miles away at 347 Alta Mesa Ave. p(z|c)=0.93 -Jill lives at 347 Alta Mesa Ave. Table 8 : Interpretable dialog generation on SMD with top probable latent actions."}, {"id": 225, "string": "AE-ED predicts more fine-grained but more error-prone actions."}, {"id": 226, "string": "Conclusion and Future Work This paper presents a novel unsupervised framework that enables the discovery of discrete latent actions and interpretable dialog response generation."}, {"id": 227, "string": "Our main contributions reside in the two sentence representation models DI-VAE and DI-VST, and their integration with the encoder decoder models."}, {"id": 228, "string": "Experiments show the proposed methods outperform strong baselines in learning discrete latent variables and showcase the effectiveness of interpretable dialog response generation."}, {"id": 229, "string": "Our findings also suggest promising future research directions, including learning better context-based latent actions and using reinforce-ment learning to adapt policy networks."}, {"id": 230, "string": "We believe that this work is an important step forward towards creating generative dialog models that can not only generalize to large unlabelled datasets in complex domains but also be explainable to human users."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 21}, {"section": "Related Work", "n": "2", "start": 22, "end": 37}, {"section": "Proposed Methods", "n": "3", "start": 38, "end": 54}, {"section": "Learning Sentence Representations from Auto-Encoding", "n": "3.1", "start": 55, "end": 66}, {"section": "Anti-Information Limitation of ELBO", "n": "3.1.1", "start": 67, "end": 73}, {"section": "VAE with Information Maximization and Batch Prior Regularization", "n": "3.1.2", "start": 74, "end": 94}, {"section": "Learning Sentence Representations from the Context", "n": "3.2", "start": 95, "end": 104}, {"section": "Integration with Encoder Decoders", "n": "3.3", "start": 105, "end": 115}, {"section": "Relationship with Conditional VAEs", "n": "3.4", "start": 116, "end": 119}, {"section": "Experiments and Results", "n": "4", "start": 120, "end": 129}, {"section": "Comparing Discrete Sentence Representation Models", "n": "4.1", "start": 130, "end": 162}, {"section": "Interpreting Latent Actions", "n": "4.2", "start": 163, "end": 183}, {"section": "Dialog Response Generation with Latent Actions", "n": "4.3", "start": 184, "end": 225}, {"section": "Conclusion and Future Work", "n": "5", "start": 226, "end": 230}], "figures": [{"filename": "../figure/image/964-Table1-1.png", "caption": "Table 1: Results for various discrete sentence representations. The KL for VAE is KL(q(z|x)\u2016p(z)) instead of KL(q(z)\u2016p(z)) (Zhao et al., 2017)", "page": 5, "bbox": {"x1": 72.0, "x2": 291.36, "y1": 141.6, "y2": 321.12}}, {"filename": "../figure/image/964-Table2-1.png", "caption": "Table 2: DI-VAE on PTB with different latent dimensions under the same budget.", "page": 5, "bbox": {"x1": 310.56, "x2": 522.24, "y1": 514.56, "y2": 571.1999999999999}}, {"filename": "../figure/image/964-Figure2-1.png", "caption": "Figure 2: Perplexity and I(x, z) on PTB by varying batch size N . BPR works better for larger N .", "page": 5, "bbox": {"x1": 313.92, "x2": 519.36, "y1": 126.72, "y2": 253.92}}, {"filename": "../figure/image/964-Table6-1.png", "caption": "Table 6: Results for attribute accuracy with and without attribute loss.", "page": 7, "bbox": {"x1": 73.92, "x2": 289.44, "y1": 156.48, "y2": 213.12}}, {"filename": "../figure/image/964-Table7-1.png", "caption": "Table 7: Performance of policy network. Lattr is included in training.", "page": 7, "bbox": {"x1": 73.92, "x2": 289.44, "y1": 620.64, "y2": 705.12}}, {"filename": "../figure/image/964-Table8-1.png", "caption": "Table 8: Interpretable dialog generation on SMD with top probable latent actions. AE-ED predicts more fine-grained but more error-prone actions.", "page": 7, "bbox": {"x1": 306.71999999999997, "x2": 530.4, "y1": 357.59999999999997, "y2": 500.15999999999997}}, {"filename": "../figure/image/964-Table4-1.png", "caption": "Table 4: Human evaluation results on judging the homogeneity of latent actions in SMD.", "page": 6, "bbox": {"x1": 306.71999999999997, "x2": 531.36, "y1": 62.879999999999995, "y2": 105.11999999999999}}, {"filename": "../figure/image/964-Table3-1.png", "caption": "Table 3: Homogeneity results (bounded [0, 1]).", "page": 6, "bbox": {"x1": 82.56, "x2": 280.32, "y1": 251.51999999999998, "y2": 308.15999999999997}}, {"filename": "../figure/image/964-Figure1-1.png", "caption": "Figure 1: Our proposed models learn a set of discrete variables to represent sentences by either autoencoding or context prediction.", "page": 0, "bbox": {"x1": 312.0, "x2": 521.28, "y1": 354.71999999999997, "y2": 412.32}}]}